% import "./graph.cep"

context km3 = {
  % KM3 metametamodel definition 
  node 'km3 'package,
  prop 'km3 'name (vstring "KM3"),
  edge 'km3 'modelElement 'contents,
  edge 'modelElement 'km3 'me_package,
  edge 'km3 'package 'contents,
  edge 'package 'km3 'me_package,
  edge 'km3 'classifier 'contents,
  edge 'classifier 'km3 'me_package,
  edge 'km3 'dataType 'contents,
  edge 'dataType 'km3 'me_package,
  edge 'km3 'class 'contents,
  edge 'class 'km3 'me_package,
  edge 'km3 'structuralFeature 'contents,
  edge 'structuralFeature 'km3 'me_package,
  edge 'km3 'reference 'contents,
  edge 'reference 'km3 'me_package,
  edge 'km3 'attribute 'contents,
  edge 'attribute 'km3 'me_package,
  edge 'km3 'boolean 'contents,
  edge 'boolean 'km3 'me_package,
  edge 'km3 'integer 'contents,
  edge 'integer 'km3 'me_package,
  edge 'km3 'string 'contents,
  edge 'string 'km3 'me_package,
  % class KM3!ModelElement 
  node 'modelElement 'class,
  prop 'modelElement 'name (vstring "ModelElement"),
  prop 'modelElement 'isAbstract (vbool true),
  % attribute KM3!ModelElement.name : String 
  node 'name 'attribute,
  prop 'name 'name (vstring "name"),
  prop 'name 'lower (vnumber 1),
  prop 'name 'upper (vnumber 1),
  prop 'name 'isOrdered (vbool false),
  prop 'name 'isUnique (vbool false),
  edge 'modelElement 'name 'features,
  edge 'name 'modelElement 'owner,
  edge 'name 'string 'type,
  % reference KM3!ModelElement.package : KM3!Package oppositeOf contents 
  node 'me_package 'reference,
  prop 'me_package 'name (vstring "package"),
  prop 'me_package 'isContainer (vbool false),
  prop 'me_package 'lower (vnumber 0),
  prop 'me_package 'upper (vnumber 1),
  prop 'me_package 'isOrdered (vbool false),
  prop 'me_package 'isUnique (vbool false),
  edge 'modelElement 'me_package 'features,
  edge 'me_package 'modelElement 'owner,
  edge 'me_package 'package 'type,
  edge 'me_package 'contents 'opposite,
  % class KM3!Package extends KM3!ModelElement 
  node 'package 'class,
  prop 'package 'name (vstring "Package"),
  prop 'package 'isAbstract (vbool false),
  edge 'package 'modelElement 'supertypes,
  % reference KM3!Package.contents[*] ordered container : KM3!ModelElement oppositeOf package 
  node 'contents 'reference,
  prop 'contents 'name (vstring "contents"),
  prop 'contents 'isContainer (vbool true),
  prop 'contents 'lower (vnumber 0),
  prop 'contents 'upper (vnumber -1),
  prop 'contents 'isOrdered (vbool false),
  prop 'contents 'isUnique (vbool false),
  edge 'package 'contents 'features,
  edge 'contents 'package 'owner,
  edge 'contents 'modelElement 'type,
  edge 'contents 'me_package 'opposite,
  % class KM3!Classifier extends KM3!ModelElement 
  node 'classifier 'class,
  prop 'classifier 'name (vstring "Classifier"),
  prop 'classifier 'isAbstract (vbool true),
  edge 'classifier 'modelElement 'supertypes,
  % class KM3!DataType extends KM3!Classifier 
  node 'dataType 'class,
  prop 'dataType 'name (vstring "DataType"),
  prop 'dataType 'isAbstract (vbool false),
  edge 'dataType 'classifier 'supertypes,
  % class KM3!Class extends KM3!Classifier 
  node 'class 'class,
  prop 'class 'name (vstring "Class"),
  prop 'class 'isAbstract (vbool false),
  edge 'class 'classifier 'supertypes,
  % attribute KM3!Class.isAbstract : Boolean 
  node 'isAbstract 'attribute,
  prop 'isAbstract 'name (vstring "isAbstract"),
  prop 'isAbstract 'lower (vnumber 1),
  prop 'isAbstract 'upper (vnumber 1),
  prop 'isAbstract 'isOrdered (vbool false),
  prop 'isAbstract 'isUnique (vbool false),
  edge 'class 'isAbstract 'features,
  edge 'isAbstract 'class 'owner,
  edge 'isAbstract 'boolean 'type,
  % reference KM3!Class.features[*] ordered container : KM3!StructuralFeature oppositeOf owner 
  node 'features 'reference,
  prop 'features 'name (vstring "structuralFeatures"),
  prop 'features 'isContainer (vbool true),
  prop 'features 'lower (vnumber 0),
  prop 'features 'upper (vnumber -1),
  prop 'features 'isOrdered (vbool true),
  prop 'features 'isUnique (vbool true),
  edge 'class 'features 'features,
  edge 'features 'class 'owner,
  edge 'features 'structuralFeature 'type,
  edge 'features 'owner 'opposite,
  % reference KM3!Class.supertypes[*] : KM3!Class 
  node 'supertypes 'reference,
  prop 'supertypes 'name (vstring "supertypes"),
  prop 'supertypes 'isContainer (vbool false),
  prop 'supertypes 'lower (vnumber 0),
  prop 'supertypes 'upper (vnumber -1),
  prop 'supertypes 'isOrdered (vbool false),
  prop 'supertypes 'isUnique (vbool true),
  edge 'class 'supertypes 'features,
  edge 'supertypes 'class 'owner,
  edge 'supertypes 'class 'type,
  % abstract class KM3!StructuralFeature extends KM3!ModelElement 
  node 'structuralFeature 'class,
  prop 'structuralFeature 'name (vstring "StructuralFeature"),
  prop 'structuralFeature 'isAbstract (vbool true),
  edge 'structuralFeature 'modelElement 'supertypes,
  % attribute KM3!StructuralFeature.lower : Integer 
  node 'lower 'attribute,
  prop 'lower 'name (vstring "lower"),
  prop 'lower 'lower (vnumber 1),
  prop 'lower 'upper (vnumber 1),
  prop 'lower 'isOrdered (vbool false),
  prop 'lower 'isUnique (vbool false),
  edge 'structuralFeature 'lower 'features,
  edge 'lower 'structuralFeature 'owner,
  edge 'lower 'integer 'type,
  % attribute KM3!StructuralFeature.upper : Integer 
  node 'upper 'attribute,
  prop 'upper 'name (vstring "upper"),
  prop 'upper 'lower (vnumber 1),
  prop 'upper 'upper (vnumber 1),
  prop 'upper 'isOrdered (vbool false),
  prop 'upper 'isUnique (vbool false),
  edge 'structuralFeature 'upper 'features,
  edge 'upper 'structuralFeature 'owner,
  edge 'upper 'integer 'type,
  % attribute KM3!StructuralFeature.isOrdered : Boolean 
  node 'isOrdered 'attribute,
  prop 'isOrdered 'name (vstring "isOrdered"),
  prop 'isOrdered 'lower (vnumber 1),
  prop 'isOrdered 'upper (vnumber 1),
  prop 'isOrdered 'isOrdered (vbool false),
  prop 'isOrdered 'isUnique (vbool false),
  edge 'structuralFeature 'isOrdered 'features,
  edge 'isOrdered 'structuralFeature 'owner,
  edge 'isOrdered 'boolean 'type,
  % attribute KM3!StructuralFeature.isUnique : Boolean 
  node 'isUnique 'attribute,
  prop 'isUnique 'name (vstring "isUnique"),
  prop 'isUnique 'lower (vnumber 1),
  prop 'isUnique 'upper (vnumber 1),
  prop 'isUnique 'isOrdered (vbool false),
  prop 'isUnique 'isUnique (vbool false),
  edge 'structuralFeature 'isUnique 'features,
  edge 'isUnique 'structuralFeature 'owner,
  edge 'isUnique 'boolean 'type,
  % reference KM3!StructuralFeature.owner : KM3!Class oppositeOf features 
  node 'owner 'reference,
  prop 'owner 'name (vstring "owner"),
  prop 'owner 'isContainer (vbool false),
  prop 'owner 'lower (vnumber 1),
  prop 'owner 'upper (vnumber 1),
  prop 'owner 'isOrdered (vbool false),
  prop 'owner 'isUnique (vbool false),
  edge 'structuralFeature 'owner 'features,
  edge 'owner 'structuralFeature 'owner,
  edge 'owner 'class 'type,
  edge 'owner 'features 'opposite,
  % reference KM3!StructuralFeature.type : KM3!Class 
  node 'type 'reference,
  prop 'type 'name (vstring "type"),
  prop 'type 'isContainer (vbool false),
  prop 'type 'lower (vnumber 1),
  prop 'type 'upper (vnumber 1),
  prop 'type 'isOrdered (vbool false),
  prop 'type 'isUnique (vbool false),
  edge 'structuralFeature 'type 'features,
  edge 'type 'structuralFeature 'owner,
  edge 'type 'classifier 'type,
  % class KM3!Reference extends KM3!StructuralFeature 
  node 'reference 'class,
  prop 'reference 'name (vstring "Reference"),
  prop 'reference 'isAbstract (vbool false),
  edge 'reference 'structuralFeature 'supertypes,
  % attribute KM3!Reference.isContainer : Boolean 
  node 'isContainer 'attribute,
  prop 'isContainer 'name (vstring "isContainer"),
  prop 'isContainer 'lower (vnumber 1),
  prop 'isContainer 'upper (vnumber 1),
  prop 'isContainer 'isOrdered (vbool false),
  prop 'isContainer 'isUnique (vbool false),
  edge 'reference 'isContainer 'features,
  edge 'isContainer 'reference 'owner,
  edge 'isContainer 'boolean 'type,
  % reference KM3!Reference.opposite : KM3!Reference 
  node 'opposite 'reference,
  prop 'opposite 'name (vstring "opposite"),
  prop 'opposite 'isContainer (vbool false),
  prop 'opposite 'lower (vnumber 0),
  prop 'opposite 'upper (vnumber 1),
  prop 'opposite 'isOrdered (vbool false),
  prop 'opposite 'isUnique (vbool false),
  edge 'reference 'opposite 'features,
  edge 'opposite 'reference 'owner,
  edge 'opposite 'reference 'type,
  % class KM3!Attribute extends KM3!StructuralFeature 
  node 'attribute 'class,
  prop 'attribute 'name (vstring "Attribute"),
  prop 'attribute 'isAbstract (vbool false),
  edge 'attribute 'structuralFeature 'supertypes,
  % datatype Boolean 
  node 'boolean 'dataType,
  prop 'boolean 'name (vstring "Boolean"),
  % datatype Integer 
  node 'integer 'dataType,
  prop 'integer 'name (vstring "Integer"),
  % datatype String 
  node 'string 'dataType,
  prop 'string 'name (vstring "String"),
  % tests if X is a string (not a swi-prolog string but a list of integers [n1,n2,...], equivalent to "\n1\n2...")
  % WFRs 
  % gives one error per call... should be improved
  % Metamodel: PN 
  node 'pn 'package,
  prop 'pn 'name (vstring "PN"),
  edge 'pn 'pnElement 'contents,
  edge 'pnElement 'pn 'me_package,
  edge 'pn 'place 'contents,
  edge 'place 'pn 'me_package,
  edge 'pn 'transition 'contents,
  edge 'transition 'pn 'me_package,
  edge 'pn 'arcpt 'contents,
  edge 'arcpt 'pn 'me_package,
  edge 'pn 'arctp 'contents,
  edge 'arctp 'pn 'me_package,
  % class PN!PNElement 
  node 'pnElement 'class,
  prop 'pnElement 'name (vstring "PNElement"),
  prop 'pnElement 'isAbstract (vbool true),
  % attribute PN!PNElement.name : String 
  node 'pn_name 'attribute,
  prop 'pn_name 'name (vstring "name"),
  prop 'pn_name 'lower (vnumber 1),
  prop 'pn_name 'upper (vnumber 1),
  prop 'pn_name 'isOrdered (vbool false),
  prop 'pn_name 'isUnique (vbool false),
  edge 'pnElement 'pn_name 'features,
  edge 'pn_name 'pnElement 'owner,
  edge 'pn_name 'string 'type,
  % class PN!Place 
  node 'place 'class,
  prop 'place 'name (vstring "Place"),
  prop 'place 'isAbstract (vbool false),
  edge 'place 'pnElement 'supertypes,
  % reference PN!Place.incomingArcs[*] : PN!ArcTP oppositeOf target 
  node 'place_incomingArcs 'reference,
  prop 'place_incomingArcs 'name (vstring "incomingArcs"),
  prop 'place_incomingArcs 'isContainer (vbool false),
  prop 'place_incomingArcs 'lower (vnumber 0),
  prop 'place_incomingArcs 'upper (vnumber -1),
  prop 'place_incomingArcs 'isOrdered (vbool false),
  prop 'place_incomingArcs 'isUnique (vbool true),
  edge 'place 'place_incomingArcs 'features,
  edge 'place_incomingArcs 'place 'owner,
  edge 'place_incomingArcs 'arctp 'type,
  edge 'place_incomingArcs 'arctp_target 'opposite,
  % reference PN!Place.outgoingArcs[*] : PN!ArcPT oppositeOf source 
  node 'place_outgoingArcs 'reference,
  prop 'place_outgoingArcs 'name (vstring "outgoingArcs"),
  prop 'place_outgoingArcs 'isContainer (vbool false),
  prop 'place_outgoingArcs 'lower (vnumber 0),
  prop 'place_outgoingArcs 'upper (vnumber -1),
  prop 'place_outgoingArcs 'isOrdered (vbool false),
  prop 'place_outgoingArcs 'isUnique (vbool true),
  edge 'place 'place_outgoingArcs 'features,
  edge 'place_outgoingArcs 'place 'owner,
  edge 'place_outgoingArcs 'arcpt 'type,
  edge 'place_outgoingArcs 'arcpt_source 'opposite,
  % class PN!Transition 
  node 'transition 'class,
  prop 'transition 'name (vstring "Transition"),
  prop 'transition 'isAbstract (vbool false),
  edge 'transition 'pnElement 'supertypes,
  % reference PN!Transition.incomingArcs[*] : PN!ArcPT oppositeOf target 
  node 'transition_incomingArcs 'reference,
  prop 'transition_incomingArcs 'name (vstring "incomingArcs"),
  prop 'transition_incomingArcs 'isContainer (vbool false),
  prop 'transition_incomingArcs 'lower (vnumber 0),
  prop 'transition_incomingArcs 'upper (vnumber -1),
  prop 'transition_incomingArcs 'isOrdered (vbool false),
  prop 'transition_incomingArcs 'isUnique (vbool true),
  edge 'transition 'transition_incomingArcs 'features,
  edge 'transition_incomingArcs 'transition 'owner,
  edge 'transition_incomingArcs 'arcpt 'type,
  edge 'transition_incomingArcs 'arcpt_target 'opposite,
  % reference PN!Transition.outgoingArcs[*] : PN!ArcTP oppositeOf source 
  node 'transition_outgoingArcs 'reference,
  prop 'transition_outgoingArcs 'name (vstring "outgoingArcs"),
  prop 'transition_outgoingArcs 'isContainer (vbool false),
  prop 'transition_outgoingArcs 'lower (vnumber 0),
  prop 'transition_outgoingArcs 'upper (vnumber 0),
  prop 'transition_outgoingArcs 'isOrdered (vbool false),
  prop 'transition_outgoingArcs 'isUnique (vbool false),
  edge 'transition 'transition_outgoingArcs 'features,
  edge 'transition_outgoingArcs 'transition 'owner,
  edge 'transition_outgoingArcs 'arctp 'type,
  edge 'transition_outgoingArcs 'arctp_source 'opposite,
  % class PN!ArcPT 
  node 'arcpt 'class,
  prop 'arcpt 'name (vstring "ArcPT"),
  prop 'arcpt 'isAbstract (vbool false),
  edge 'arcpt 'pnElement 'supertypes,
  % reference PN!ArcPT.source : PN!Place oppositeOf outgoingArcs 
  node 'arcpt_source 'reference,
  prop 'arcpt_source 'name (vstring "source"),
  prop 'arcpt_source 'isContainer (vbool false),
  prop 'arcpt_source 'lower (vnumber 1),
  prop 'arcpt_source 'upper (vnumber 1),
  prop 'arcpt_source 'isOrdered (vbool false),
  prop 'arcpt_source 'isUnique (vbool false),
  edge 'arcpt 'arcpt_source 'features,
  edge 'arcpt_source 'arcpt 'owner,
  edge 'arcpt_source 'place 'type,
  edge 'arcpt_source 'place_outgoingArcs 'opposite,
  % reference PN!ArcPT.target : PN!Transition oppositeOf incomingArcs 
  node 'arcpt_target 'reference,
  prop 'arcpt_target 'name (vstring "target"),
  prop 'arcpt_target 'isContainer (vbool false),
  prop 'arcpt_target 'lower (vnumber 1),
  prop 'arcpt_target 'upper (vnumber 1),
  prop 'arcpt_target 'isOrdered (vbool false),
  prop 'arcpt_target 'isUnique (vbool false),
  edge 'arcpt 'arcpt_target 'features,
  edge 'arcpt_target 'arcpt 'owner,
  edge 'arcpt_target 'transition 'type,
  edge 'arcpt_target 'transition_incomingArcs 'opposite,
  % class PN!ArcTP 
  node 'arctp 'class,
  prop 'arctp 'name (vstring "ArcTP"),
  prop 'arctp 'isAbstract (vbool false),
  edge 'arctp 'pnElement 'supertypes,
  % reference PN!ArcTP.source : PN!Transition oppositeOf outgoingArcs 
  node 'arctp_source 'reference,
  prop 'arctp_source 'name (vstring "source"),
  prop 'arctp_source 'isContainer (vbool false),
  prop 'arctp_source 'lower (vnumber 1),
  prop 'arctp_source 'upper (vnumber 1),
  prop 'arctp_source 'isOrdered (vbool false),
  prop 'arctp_source 'isUnique (vbool false),
  edge 'arctp 'arctp_source 'features,
  edge 'arctp_source 'arctp 'owner,
  edge 'arctp_source 'transition 'type,
  edge 'arctp_source 'transition_outgoingArcs 'opposite,
  % reference PN!ArcTP.target : PN!Place oppositeOf incomingArcs 
  node 'arctp_target 'reference,
  prop 'arctp_target 'name (vstring "target"),
  prop 'arctp_target 'isContainer (vbool false),
  prop 'arctp_target 'lower (vnumber 1),
  prop 'arctp_target 'upper (vnumber 1),
  prop 'arctp_target 'isOrdered (vbool false),
  prop 'arctp_target 'isUnique (vbool false),
  edge 'arctp 'arctp_target 'features,
  edge 'arctp_target 'arctp 'owner,
  edge 'arctp_target 'place 'type,
  edge 'arctp_target 'place_incomingArcs 'opposite,
  % Model: MyPetriNet 
  % place P1 
  node 'p1 'place,
  prop 'p1 'pn_name (vstring "P1"),
  edge 'p1 'a1 'place_outgoingArcs,
  % place P2 
  node 'p2 'place,
  prop 'p2 'pn_name (vstring "P2"),
  edge 'p2 'a2 'place_incomingArcs,
  % transition T1 
  node 't1 'transition,
  prop 't1 'pn_name (vstring "T1"),
  edge 't1 'a1 'transition_incomingArcs,
  edge 't1 'a2 'transition_outgoingArcs,
  % arcpt a1 
  node 'a1 'arcpt,
  prop 'a1 'pn_name (vstring "A1"),
  edge 'a1 'p1 'arcpt_source,
  edge 'a1 't1 'arcpt_target,
  % arctp a2 
  node 'a2 'arctp,
  prop 'a2 'pn_name (vstring "A2"),
  edge 'a2 't1 'arctp_source,
  edge 'a2 'p2 'arctp_target,
}.
